name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  BUN_VERSION: '1.0.0'

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
          
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
          
      - name: Install dependencies
        run: bun install --frozen-lockfile
        
      - name: Type checking
        run: bun run type-check
        
      - name: Type coverage
        run: bun run type-coverage
        
      - name: Lint
        run: bun run lint
        
      - name: Run tests
        run: bun test --coverage
        env:
          DATABASE_URL: postgres://postgres:test_password@localhost:5432/test_db
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test_secret
          
      - name: Check test coverage
        run: |
          COVERAGE=$(bun test --coverage --reporter=json | jq -r '.coverageMap.total.percent')
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Test coverage is below 80%: $COVERAGE%"
            exit 1
          fi
          
      - name: Build
        run: bun run build
        
      - name: Security audit
        run: bun audit
        
  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ env.BUN_VERSION }}
          
      - name: Build Docker image
        run: docker build -t bun-elysia-api .
        
      - name: Deploy to staging
        run: echo "Deploy to staging environment"
        
      - name: Run load tests
        run: echo "Run Artillery load tests"
        
      - name: Deploy to production
        run: echo "Deploy to production with canary deployment"